{"version":3,"sources":["images/sorting_visual.png","constants/screenName.constant.ts","constants/style.constant.ts","utils/namePathTranslation.ts","components/Background.tsx","components/Logo.tsx","components/NavBar.tsx","components/NextBtn.tsx","screens/Home.tsx","components/Link.tsx","models/index.ts","screens/About.tsx","components/SkillBlock.tsx","data/index.ts","screens/Skill.tsx","utils/index.ts","components/TimelineBar.tsx","components/Timeline.tsx","screens/Experience.tsx","components/ProjectBlock.tsx","screens/Project.tsx","screens/Contact.tsx","screens/index.ts","routes/index.ts","App.js","serviceWorker.js","index.js"],"names":["module","exports","ScreenName","reverseMap","home","about","skill","experience","project","contact","colors","primary","secondary","textPrimary","textSecondary","inactive","logoBack","logoText","nextBtn","nameToPath","name","pathToName","path","replace","Background","children","start","curScreenName","useLocation","pathname","color","reversed","className","style","background","clsx","Logo","bgColor","textColor","goHome","backgroundColor","onClick","NavBar","tabs","goto","history","useHistory","useState","hover","setHover","hoverHandler","useCallback","hoverEndHandler","getNavigateHandler","screen","push","map","key","onMouseOver","onMouseLeave","NextBtn","loading","nextScreen","Error","getNextScreen","nextScreenName","toUpperCase","substr","handleNext","fontSize","CircularProgress","size","homeColor","Home","display","flexDirection","justifyContent","height","width","alignItems","animationDelay","marginTop","marginBottom","SkillCategory","SkillLevel","Link","rest","navigateTo","undefined","target","rel","href","keyPrefix","Math","random","About","details","marginLeft","zIndex","detail","i","verticalAlign","marginRight","Experience","_exp","jobPost","company","description","companySite","startDate","endDate","duration","this","_calcDuraction","exp","getTime","Experiences","experiences","_experiences","sumOfDuration","sort","a","b","reduce","pre","cur","SkillItem","getNumericalLevel","level","values","Object","result","length","indexOf","levelClass","low","mid","top","getLevelClass","levelNumeric","Grid","container","item","xs","SkillBlock","category","skills","myskills","lang","website","mobile","db","backend","myExperiences","Date","myProjects","image","sortPng","github","Skill","props","overflow","maxHeight","flexWrap","obj","keys","TimelineBar","experinces","selectedExp","onSelect","hovExp","setHovExp","getColor","l","experince","_height","active","hidden","Timeline","selExp","setSelExp","contentHeight","setContentHeight","content","useRef","getDayMonth","unixTime","date","day","getDate","fDay","month","getMonth","getYear","getFullYear","handleSelExp","useLayoutEffect","current","contentSpan","clientHeight","startTime","endTime","justify","value","formatValue","ref","des","transform","ProjectBlock","alt","src","flex","onMouseOut","border","Project","position","padding","proj","Contact","copied","setCopied","copyLink","textArea","document","createElement","left","body","appendChild","focus","select","execCommand","setTimeout","err","removeChild","Tooltip","title","placement","arrow","screens","routes","screenName","assign","filter","App","ending","setEnding","navCallback","useTransition","basename","reverse","Screen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2ee50a84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sorting_visual.ce34a224.png\";","export enum ScreenName {\r\n    home = '',\r\n    about = 'about',\r\n    skill = 'skill',\r\n    experience = 'experience',\r\n    project = 'project',\r\n    contact = 'contact'\r\n}","import {ScreenName} from './screenName.constant'\r\n\r\nexport type isScreenReversed = {\r\n    [key in ScreenName]: boolean;\r\n}\r\n\r\nexport const reverseMap: isScreenReversed = {\r\n    [ScreenName.home]: false,\r\n    [ScreenName.about]: true,\r\n    [ScreenName.skill]: false,\r\n    [ScreenName.experience]: true,\r\n    [ScreenName.project]: false,\r\n    [ScreenName.contact]: true\r\n}\r\n\r\nexport interface Color {\r\n    primary: string;\r\n    secondary: string;\r\n    textPrimary: string;\r\n    textSecondary: string;\r\n    inactive: string;\r\n    logoBack: string;\r\n    logoText: string;\r\n    nextBtn?: string;\r\n}\r\n\r\nexport type ColorForScreen = {\r\n    [key in ScreenName]: Color\r\n}\r\n\r\nexport const colors: ColorForScreen = {\r\n    [ScreenName.home]: {\r\n        primary: '#FFAA00',\r\n        secondary: 'white',\r\n        textPrimary: 'black',\r\n        textSecondary: '#0022FF',\r\n        inactive: '#A3A3A3',\r\n        logoBack: 'black',\r\n        logoText: '#FFAA00'\r\n    },\r\n    [ScreenName.about]: {\r\n        primary: '#FFAEAE',\r\n        secondary: 'white',\r\n        textPrimary: 'black',\r\n        textSecondary: '#FF0000',\r\n        inactive: '#F1F1F1',\r\n        logoBack: '#FFAEAE',\r\n        logoText: 'white',\r\n        nextBtn: '#FF0000'\r\n    },\r\n    [ScreenName.skill]: {\r\n        primary: 'white',\r\n        secondary: '#0022FF',\r\n        textPrimary: 'black',\r\n        textSecondary: 'white',\r\n        inactive: '#DCDCDC',\r\n        logoBack: '#0022FF',\r\n        logoText: 'white',\r\n        nextBtn: '#0022FF'\r\n    },\r\n    [ScreenName.experience]: {\r\n        primary: '#9FECFF',\r\n        secondary: 'white',\r\n        textPrimary: 'black',\r\n        textSecondary: '#034150',\r\n        inactive: 'white',\r\n        logoBack: '#9FECFF',\r\n        logoText: 'white',\r\n        nextBtn: '#034150'\r\n    },\r\n    [ScreenName.project]: {\r\n        primary: '#60026E',\r\n        secondary: '#2f2f2f',\r\n        textPrimary: 'rgb(211, 181, 255)',\r\n        textSecondary: '#3acd4a',\r\n        inactive: 'grey',\r\n        logoBack: 'black',\r\n        logoText: '#3acd4a',\r\n        nextBtn: '#60026E'\r\n    },\r\n    [ScreenName.contact]: {\r\n        primary: '#61B48B',\r\n        secondary: 'transparent',\r\n        textPrimary: 'black',\r\n        textSecondary: '#46FFBB',\r\n        inactive: 'white',\r\n        logoBack: 'white',\r\n        logoText: '#61B48B',\r\n        nextBtn: '#61B48B'\r\n    }\r\n}","import {ScreenName} from '../constants'\r\n\r\nexport function nameToPath (name: ScreenName): string {\r\n    return '/' + name\r\n}\r\n\r\nexport function pathToName (path: string): ScreenName {\r\n    const name = path.replace('/', '')\r\n    return name as ScreenName\r\n}\r\n\r\nexport function getScreenName (name: ScreenName): string {\r\n    if (name === ScreenName.home) {\r\n        return 'Home'\r\n    }\r\n    return name[0].toUpperCase() + name.substr(1)\r\n}\r\n\r\nexport function getNextScreen (name: ScreenName): ScreenName | never {\r\n    switch (name) {\r\n        case ScreenName.home:\r\n            return ScreenName.about\r\n        case ScreenName.about:\r\n            return ScreenName.skill\r\n        case ScreenName.skill:\r\n            return ScreenName.experience\r\n        case ScreenName.experience:\r\n            return ScreenName.project\r\n        case ScreenName.project:\r\n            return ScreenName.contact\r\n        case ScreenName.contact:\r\n            return ScreenName.home\r\n        default:\r\n            throw new Error('ScreenName: ' + ScreenName + ' is not supported')\r\n    }\r\n}","import React from 'react'\r\nimport './Background.css'\r\nimport clsx from 'clsx'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { colors, reverseMap } from '../constants'\r\nimport {pathToName} from '../utils/namePathTranslation'\r\n\r\nexport interface Props {\r\n    children?: React.ReactNode;\r\n    start: boolean;\r\n}\r\n\r\nconst Background = ({children, start}: Props) => {\r\n    const {pathname} = useLocation()\r\n    const curScreenName = pathToName(pathname)\r\n    const color = colors[curScreenName]\r\n    const reversed = reverseMap[curScreenName]\r\n\r\n    return (\r\n    <div\r\n    className={`Background animate__animated animate__fadeIn`}\r\n    style={{background: color.primary}}>\r\n        <div\r\n        className={clsx('bottom-eclipse',\r\n                    {reversed},\r\n                    {'animate__animated animate__fadeInUp': start},\r\n                    {'animate__animated animate__fadeOutDown': !start})}\r\n        style={{background: color.secondary}}></div>\r\n        <div\r\n        className={clsx('top-eclipse',\r\n                    {reversed},\r\n                    {'animate__animated animate__fadeInDown': start},\r\n                    {'animate__animated animate__fadeOutUp': !start})}\r\n        style={{background: color.secondary}}></div>\r\n        {children}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Background","import React from 'react'\r\nimport './Logo.css'\r\n\r\nexport interface Props {\r\n    bgColor: string;\r\n    textColor: string;\r\n    goHome: () => void;\r\n}\r\n\r\nconst Logo = ({bgColor, textColor, goHome}: Props) => {\r\n    return (\r\n        <div\r\n        className='logo'\r\n        style={{backgroundColor: bgColor, color: textColor}}\r\n        onClick={goHome}>\r\n            REX M0\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo","import React, {useState, useCallback} from 'react'\r\nimport './NavBar.css'\r\nimport Logo from './Logo'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\nimport {pathToName, nameToPath} from '../utils/namePathTranslation'\r\nimport {colors, ScreenName} from '../constants'\r\n\r\nexport interface Props {\r\n    tabs: ScreenName[];\r\n    goto: (callback: () => void) => void;\r\n}\r\n\r\nconst NavBar = ({tabs, goto}: Props) => {\r\n    const history = useHistory()\r\n    const [hover, setHover] = useState<any>({})\r\n    const {pathname} = useLocation()\r\n    const curScreenName = pathToName(pathname)\r\n\r\n    const hoverHandler = useCallback((name) => () => \r\n        setHover((hover: any) => ({...hover, [name]: true}))\r\n    , [])\r\n\r\n    const hoverEndHandler = useCallback((name) => () => {\r\n        setHover((hover: any) => ({...hover, [name]: false}))\r\n    }, [])\r\n\r\n    const getNavigateHandler = useCallback((screen: ScreenName) => () => {\r\n        if (curScreenName !== screen) {\r\n            goto(() => history.push(nameToPath(screen)))\r\n        }\r\n    }, [goto, history, curScreenName])\r\n\r\n    const color = colors[curScreenName]\r\n\r\n    return (\r\n        <div className='navbar-container'>\r\n            <Logo bgColor={color.logoBack} textColor={color.logoText} goHome={getNavigateHandler(ScreenName.home)}/>\r\n            <div className='navbar-space'/>\r\n            <div className='navbar-tabs'>\r\n            {\r\n                tabs.map((name) => (\r\n                    <div style={{color: hover[name] === true || curScreenName === name ?\r\n                        color.textSecondary : color.inactive}} onClick={getNavigateHandler(name)} key={name}\r\n                    onMouseOver={hoverHandler(name)} onMouseLeave={hoverEndHandler(name)}>{name}</div>\r\n                ))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React, { useCallback } from 'react'\r\nimport { colors } from '../constants'\r\nimport {nameToPath, pathToName, getNextScreen, getScreenName} from '../utils/namePathTranslation'\r\nimport {useLocation, useHistory} from 'react-router-dom'\r\nimport {CircularProgress} from '@material-ui/core'\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward'\r\nimport clsx from 'clsx'\r\nimport './NextBtn.css'\r\n\r\nexport interface Props {\r\n    goto: (callback: () => void) => void;\r\n    loading: boolean;\r\n}\r\n\r\nconst NextBtn = ({goto, loading}: Props) => {\r\n    const history = useHistory()\r\n\tconst {pathname} = useLocation()\r\n    const curScreenName = pathToName(pathname)\r\n    const nextScreen = getNextScreen(curScreenName)\r\n    const nextScreenName = getScreenName(nextScreen)\r\n    const color = colors[nextScreen]\r\n\r\n    const handleNext = useCallback(() => {\r\n        goto(() => history.push(nameToPath(nextScreen)))\r\n    }, [goto, nextScreen, history])\r\n\r\n    return (\r\n        <div\r\n        className='next-btn animate__animated animate__fadeInRight'\r\n        style={{color: color.nextBtn}}\r\n        onClick={handleNext}>\r\n            <span className={clsx('next-text', {loading})}>{nextScreenName}</span>\r\n            {!loading && <ArrowForwardIcon className='next-arrow' fontSize='large'/>}\r\n            {loading && <CircularProgress size={35}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NextBtn","import React from 'react'\r\nimport {ScreenName, colors} from '../constants'\r\n\r\nexport interface Props{\r\n    history: any;\r\n}\r\n\r\nconst homeColor = colors[ScreenName.home]\r\n\r\nconst Home = ({history}: Props) => {\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', height: '100%', width: '50%', alignItems: 'flex-end'}}>\r\n            <div>\r\n            <div className='rm-text-h3 animate__animated animate__fadeInUp' style={{color: homeColor.textSecondary, animationDelay: '0.3s'}}>Hi, I am</div>\r\n            <div className='rm-text-h1 animate__animated animate__fadeInUp' style={{marginTop: 15, marginBottom: 15, animationDelay: '1s'}}>Rex Mo</div>\r\n            <div className='rm-text-1 rm-typed-anime' style={{animationDelay: '1.8s'}}>A Software Engineer in Hong Kong</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React, {useCallback} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {nameToPath} from '../utils'\r\nimport {ScreenName} from '../constants'\r\n\r\nexport interface Props extends React.HTMLProps<HTMLAnchorElement> {\r\n    path?: string;\r\n    screen?: ScreenName;\r\n    style: React.CSSProperties;\r\n    goto?: (callback: () => void) => void;\r\n    children?: React.ReactNode;\r\n}\r\n\r\nconst Link = ({path, screen, style, children, goto, ...rest}: Props) => {\r\n    const history = useHistory()\r\n    const navigateTo = useCallback(() => {\r\n        if (screen === undefined || goto === undefined) {\r\n            throw new Error('specify screen + goto')\r\n        }\r\n        goto(() => history.push(nameToPath(screen)))\r\n    }, [history, goto, screen])\r\n    if (path === undefined && (screen === undefined || goto === undefined)) {\r\n        throw new Error('specify either path/(screen + goto) for Link')\r\n    }\r\n    if (path !== undefined) {\r\n        return (\r\n            <a\r\n            target='_blank'\r\n            rel='noopener noreferrer'\r\n            style={style}\r\n            {...rest}\r\n            href={path}>{children}</a>\r\n        )\r\n    }\r\n    return (\r\n        <span onClick={navigateTo} className='rm-link' style={style}>{children}</span>\r\n    )\r\n}\r\n\r\nexport default Link","export enum SkillCategory {\r\n    lang='Programming Languages',\r\n    website='Websites',\r\n    mobile='Mobile Apps',\r\n    backend='Backend Frameworks',\r\n    db='Databases'\r\n}\r\n\r\nexport enum SkillLevel {\r\n    top='Most Experienced',\r\n    mid='Experienced',\r\n    low='Learned'\r\n}\r\n\r\nexport interface Skill {\r\n    name: string;\r\n    level: SkillLevel;\r\n}\r\n\r\nexport interface _Experience {\r\n    jobPost: string;\r\n    company: string;\r\n    companySite?: string;\r\n    description: string[];\r\n    startDate: Date;\r\n    endDate: Date;\r\n}\r\n\r\nexport class Experience implements _Experience {\r\n    public jobPost: string;\r\n    public company: string;\r\n    public description: string[];\r\n    public companySite?: string;\r\n    public startDate: Date;\r\n    public endDate: Date;\r\n    public duration: number;\r\n    constructor(_exp: _Experience) {\r\n        this.jobPost = _exp.jobPost\r\n        this.company = _exp.company\r\n        this.description = _exp.description\r\n        this.startDate = _exp.startDate\r\n        this.endDate = _exp.endDate\r\n        this.companySite = _exp.companySite\r\n        this.duration = this._calcDuraction(_exp)\r\n    }\r\n\r\n    private _calcDuraction(exp: _Experience): number {\r\n        return exp.endDate.getTime() - exp.startDate.getTime()\r\n    }\r\n}\r\n\r\nexport class Experiences {\r\n    private _experiences: Experience[] = []\r\n    public sumOfDuration: number = 0\r\n    constructor (experiences?: _Experience[]) {\r\n        if (experiences !== undefined) {\r\n            this._experiences = experiences.map(exp  => new Experience(exp))\r\n            this._experiences.sort((a, b) => {\r\n                return a.startDate > b.startDate ? -1 : 1;\r\n            })\r\n            this.sumOfDuration = this._experiences.reduce((pre, cur) => (pre + cur.duration), 0)\r\n        }\r\n    }\r\n\r\n    get experiences() {\r\n        return this._experiences;\r\n    }\r\n}\r\n\r\nexport interface Project {\r\n    name: string;\r\n    image: string;\r\n    description: string;\r\n    github?: string;\r\n}","import React from 'react'\r\nimport {colors, ScreenName} from '../constants'\r\nimport Link from '../components/Link'\r\nimport LabelIcon from '@material-ui/icons/Label'\r\n\r\nexport interface Props{\r\n    goto: (callback: () => void) => void;\r\n    history: any;\r\n}\r\n\r\nconst keyPrefix = Math.random() + ''\r\n\r\nconst About = ({history, goto}: Props) => {\r\n    const color = colors[ScreenName.about]\r\n    const details = [\r\n        <span>\r\n            {`majoring at `}\r\n            <Link\r\n            path='https://www.eee.hku.hk/study/undergraduate/computer-engineering/'\r\n            style={{color: color.textSecondary}}>computer engineering</Link>\r\n            {` in `}\r\n            <Link\r\n            path='https://www.hku.hk/'\r\n            style={{color: color.textSecondary}}>HKU</Link>\r\n            , graduating in June 2021\r\n        </span>,\r\n        <span>\r\n        {'Have done '}\r\n        <Link\r\n        screen={ScreenName.experience}\r\n        goto={goto}\r\n        style={{color: color.textSecondary}}>three internships</Link>\r\n        {', mainly involved in front-end development'}</span>,\r\n        <span>enjoy writing clean and simple code</span>\r\n    ]\r\n    return (\r\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', height: '100%', marginLeft: 200, zIndex: 1}}>\r\n            <div className='rm-text-h1 animate__animated animate__fadeInUp' style={{marginBottom: 20}}>\r\n                I build\r\n                <span style={{color: color.textSecondary}}> apps</span> and\r\n                <span style={{color: color.textSecondary}}> websites</span></div>\r\n            {\r\n                details.map((detail, i) =>\r\n                    <div key={keyPrefix + i} className='rm-text-3 animate__animated animate__slideInLeft'\r\n                        style={{animationDelay: (0.3 * (i + 1)) + 's', marginBottom: 10}}>\r\n                        <LabelIcon style={{fontSize: 'inherit', verticalAlign: 'middle', marginRight: 5}}/>\r\n                        {detail}\r\n                    </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, { useCallback } from 'react'\r\nimport {SkillCategory, Skill, SkillLevel} from '../models'\r\nimport {Grid} from '@material-ui/core'\r\nimport './SkillBlock.css'\r\n\r\nexport interface Props {\r\n    category: SkillCategory;\r\n    skills: Skill[];\r\n}\r\n\r\nconst SkillItem = (skill: Skill) => {\r\n    const getNumericalLevel = useCallback((level: SkillLevel) => {\r\n        const values = Object.values(SkillLevel)\r\n        const result = (values.length - values.indexOf(level)) / values.length\r\n        return result < 0.4 ? 0.4 : result\r\n    }, [])\r\n\r\n    const getLevelClass = useCallback((level: SkillLevel) => {\r\n        switch(level) {\r\n            case SkillLevel.low:\r\n                return 'low-level'\r\n            case SkillLevel.mid:\r\n                return 'mid-level'\r\n            case SkillLevel.top:\r\n                return 'top-level'\r\n            default:\r\n                throw new Error('SkillLevel was not supported')\r\n        }\r\n    }, [])\r\n\r\n    const levelClass = getLevelClass(skill.level)\r\n    const levelNumeric = getNumericalLevel(skill.level)\r\n\r\n    return (\r\n        <Grid className={levelClass + ' skill-item-container'} container>\r\n            <Grid className='skill-block-text' item xs={6}>{skill.name}</Grid>\r\n            <Grid className='skill-block-small-text' container item xs={6}>\r\n                <Grid item xs={12}>\r\n                    <div className='skill-item-level' style={{width: 100 * levelNumeric + '%', height: 10}}/>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <div>{skill.level}</div>\r\n                </Grid>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nconst keyPrefix = Math.random() + ''\r\n\r\nconst SkillBlock = ({category, skills}: Props) => {\r\n    return (\r\n        <div className='skill-block-container'>\r\n            <div className='skill-block-category'>{category}</div>\r\n            {skills.map((skill, i) => <SkillItem key={keyPrefix + i} {...skill}/>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SkillBlock","import {Skill, SkillCategory, SkillLevel, Experiences, Project} from '../models'\r\nimport sortPng from '../images/sorting_visual.png'\r\n\r\nexport type Skills = {[val in SkillCategory]: Skill[]}\r\n\r\nexport const myskills: Skills = {\r\n    [SkillCategory.lang]: [\r\n        {name: 'JavaScript', level: SkillLevel.top},\r\n        {name: 'HTML & CSS', level: SkillLevel.top},\r\n        {name: 'Python', level: SkillLevel.mid},\r\n        {name: 'Typescript', level: SkillLevel.mid},\r\n        {name: 'Java', level: SkillLevel.low},\r\n        {name: 'SQL', level: SkillLevel.low},\r\n        {name: 'C++', level: SkillLevel.low}\r\n    ],\r\n    [SkillCategory.website]: [\r\n        {name: 'React', level: SkillLevel.top},\r\n        {name: 'Vue', level: SkillLevel.mid}\r\n    ],\r\n    [SkillCategory.mobile]: [\r\n        {name: 'React Native', level: SkillLevel.top}\r\n    ],\r\n    [SkillCategory.db]: [\r\n        {name: 'MySQL', level: SkillLevel.mid},\r\n        {name: 'MongoDB', level: SkillLevel.low}\r\n    ],\r\n    [SkillCategory.backend]: [\r\n        {name: 'ExpressJS', level: SkillLevel.mid},\r\n        {name: 'Django', level: SkillLevel.mid}\r\n    ]\r\n}\r\n\r\nexport const myExperiences: Experiences = new Experiences([\r\n    {\r\n        jobPost: 'R&D intern',\r\n        company: 'Chun Shing Development ( Hong Kong ) Limited',\r\n        companySite: 'http://www.chunshing.hk/en/aboutus/',\r\n        description: [\r\n            'Built two mobile apps for a iot project with React Native',\r\n            'One of the apps used for visualizing data collected from the iot devices',\r\n            'Another app collects data from a iot device, and further upload it to the server',\r\n            'Learned JavaScript and React Native in a month, and built the two apps'\r\n        ],\r\n        startDate: new Date('2018-08-01'),\r\n        endDate: new Date('2018-08-31')\r\n    },\r\n    {\r\n        jobPost: 'Research assistant',\r\n        company: 'HKU (Department of Electrical and Electronic Engineering)',\r\n        companySite: 'https://www.eee.hku.hk/about/',\r\n        description: [\r\n            'Built a mobile app with React Native',\r\n            'Features of the App:',\r\n            'visualizing data from server',\r\n            'allow users to fill in surveys'\r\n        ],\r\n        startDate: new Date('2018-12-01'),\r\n        endDate: new Date('2018-12-31')\r\n    },\r\n    {\r\n        jobPost: 'Summer intern',\r\n        company: 'Avo Insurance Company Limited',\r\n        companySite: 'https://www.heyavo.com/en/about/',\r\n        description: [\r\n            'Mainly contributed in building Avo\\'s website with Vue.',\r\n            'Wrote NodeJS programs to crawl data for other teams',\r\n            'Built an internal tool that allows non-programmers to edit email templates'\r\n        ],\r\n        startDate: new Date('2019-06-12'),\r\n        endDate: new Date('2019-11-30')\r\n    },\r\n    {\r\n        jobPost: 'Summer intern',\r\n        company: 'Hong Kong Applied Science and Technology Research Institute Company Limited',\r\n        companySite: 'https://www.astri.org/about/',\r\n        description: [\r\n            'Mainly contributed in developing a website with React.',\r\n            'Created a set of components and various web pages.'\r\n        ],\r\n        startDate: new Date('2020-07-06'),\r\n        endDate: new Date('2020-08-28')\r\n    }\r\n])\r\n\r\nexport const myProjects: Project[] = [\r\n    {\r\n        name: 'Sorting visualisation',\r\n        description: 'Visualise sorting algorithms with the HTML canvas element using plain JavaScript',\r\n        image: sortPng,\r\n        github: 'https://github.com/mrex1/sorting_visualization/'\r\n    }\r\n]","import React from 'react'\r\nimport SkillBlock from '../components/SkillBlock'\r\nimport {myskills, Skills} from '../data'\r\nimport {getKeys} from '../utils'\r\n\r\nexport interface Props{\r\n\r\n}\r\n\r\nconst keyPrefix = Math.random() + ''\r\n\r\nconst Skill = (props: Props) => {\r\n    return (\r\n        <div style={{height: '100%', width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n        <div className='animate__animated animate__slideInUp' style={{overflow: 'auto', height: '70%', maxHeight: 500, width: '85%', display: 'flex', flexDirection: 'column', flexWrap: 'wrap'}}>\r\n            {\r\n                getKeys<Skills, keyof Skills>(myskills)\r\n                .map((category, i) => \r\n                    <SkillBlock key={keyPrefix + i} category={category} skills={myskills[category]}/>)\r\n            }\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Skill","export * from './namePathTranslation'\r\nexport function getKeys<T, K extends keyof T>(obj:T): K[] {\r\n    return Object.keys(obj) as K[]\r\n}","import React, { useCallback, useState } from 'react'\r\nimport {Experience, Experiences} from '../models'\r\nimport clsx from 'clsx'\r\nimport './TimelineBar.css'\r\n\r\nexport interface Props {\r\n    experinces: Experiences;\r\n    selectedExp: Experience;\r\n    onSelect: (exp: Experience) => void;\r\n}\r\n\r\nconst keyPrefix = Math.random() + ''\r\n\r\nconst TimelineBar = ({experinces, selectedExp, onSelect}: Props) => {\r\n    const [hovExp, setHovExp] = useState<Experience | null>(null)\r\n    const getColor = useCallback((i: number, l: number) => {\r\n        return `rgb(255, ${(l - i) / l * 255}, ${(l - i) / l * 255})`\r\n    }, [])\r\n\r\n    return (\r\n        <div className='time-line-bar-container'>\r\n            {\r\n                experinces.experiences.map((experince, i) => {\r\n                    const _height = experince.duration / experinces.sumOfDuration * 600\r\n                    const height = (_height < 70 ? 70 : _height)\r\n                    const color = getColor(i + 1, experinces.experiences.length)\r\n                    return (\r\n                        <div\r\n                        className={clsx('time-line-bar-item', {active: experince === selectedExp})}\r\n                        key={keyPrefix + i}\r\n                        onMouseOver={() => setHovExp(experince)}\r\n                        onMouseLeave={() => setHovExp(null)}\r\n                        onClick={() => experince === selectedExp || onSelect(experince)}\r\n                        style={{height, backgroundColor: color}}>\r\n                            <div\r\n                            className={clsx('time-line-tooltip', {hidden: hovExp !== experince || selectedExp === experince})}\r\n                            style={{backgroundColor: color}}>\r\n                                {experince.company}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimelineBar","import React, {useState, useCallback, useRef, useLayoutEffect} from 'react'\r\nimport { Grid } from '@material-ui/core'\r\nimport {Experiences, Experience} from '../models'\r\nimport AnimatedNumber from \"animated-number-react\"\r\nimport TimelineBar from './TimelineBar'\r\nimport NavigationOutlinedIcon from '@material-ui/icons/NavigationOutlined';\r\nimport clsx from 'clsx'\r\nimport './Timeline.css'\r\n\r\nexport interface Props {\r\n    experiences: Experiences;\r\n}\r\n\r\nconst keyPrefix = Math.random() + ''\r\n\r\nconst Timeline = ({experiences}: Props) => {\r\n    const [selExp, setSelExp] = useState<Experience>(experiences.experiences[0])\r\n    const [contentHeight, setContentHeight] = useState<number>()\r\n    const content = useRef<HTMLDivElement>()\r\n\r\n    const getDayMonth = useCallback((unixTime: number) => {\r\n        const date = new Date(unixTime)\r\n        const day = date.getDate()\r\n        const fDay = day < 10 ? '0' + day : day\r\n        const month = date.getMonth() + 1\r\n        const fMonth = month < 10 ? '0' + month : month\r\n        return  fDay + '/' + fMonth\r\n    }, [])\r\n\r\n    const getYear = useCallback((unixTime: number) => {\r\n        const date = new Date(unixTime)\r\n        return date.getFullYear()\r\n    }, [])\r\n\r\n    const handleSelExp = useCallback((exp: Experience) => {\r\n        setSelExp(exp)\r\n    }, [])\r\n\r\n    useLayoutEffect(() => {\r\n        if (content?.current) {\r\n            const contentSpan = content.current\r\n            setContentHeight(contentSpan.clientHeight)\r\n        }\r\n    }, [selExp])\r\n\r\n    const {startDate, endDate, jobPost, company, description, companySite} = selExp\r\n    const startTime = startDate.getTime()\r\n    const endTime = endDate.getTime()\r\n\r\n    return (\r\n        <Grid container className='time-line-container' alignItems='center' justify='center'>\r\n            <div className='time-line-date-container'>\r\n                <div className='time-line-year rm-text-h1'>\r\n                    <AnimatedNumber value={startTime} formatValue={getYear} duration={300}/>\r\n                </div>\r\n                <div className='rm-text-3'>\r\n                    <AnimatedNumber value={startTime} formatValue={getDayMonth} duration={300}/>\r\n                    {' ~ '}\r\n                    <AnimatedNumber value={endTime} formatValue={getDayMonth} duration={300}/>\r\n                </div>\r\n            </div>\r\n            <div className='time-line-bar-outter-container'>\r\n                <TimelineBar selectedExp={selExp} experinces={experiences} onSelect={handleSelExp}/>\r\n            </div>\r\n            <div className={clsx('time-line-content-container')}>\r\n                <div className='rm-text-h3'>{jobPost}</div>\r\n                {companySite ? \r\n                    <a\r\n                    className='rm-text-6 company-name'\r\n                    href={companySite} target='_blank' rel='noopener noreferrer'>{company}</a> :\r\n                    <div className='rm-text-6 company-name'>{company}</div>\r\n                }\r\n                <div className='rm-text-5 time-line-content-inner-container' style={{height: contentHeight}}>\r\n                    <span ref={content as any} style={{display: 'inline-block'}}>\r\n                        {description.map((des, i) => (\r\n                            <div className='time-line-content-bullet' key={keyPrefix + 'des' + i}>\r\n                                <NavigationOutlinedIcon\r\n                                style={{verticalAlign: 'top',fontSize: 'inherit', transform: 'rotateZ(90deg)', marginRight: 5}}/>\r\n                                {des}\r\n                            </div>\r\n                        ))}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Timeline","import React from 'react'\r\nimport Timeline from '../components/Timeline'\r\nimport {myExperiences} from '../data'\r\nimport {colors, ScreenName} from '../constants'\r\n\r\nexport interface Props{\r\n\r\n}\r\n\r\nconst Experience = (props: Props) => {\r\n    const color = colors[ScreenName.experience]\r\n    return (\r\n        <div style={{height: '100%', width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>\r\n            <div className='animate__animated animate__flipInX' style={{height: '70%', width: '85%', color: color.textSecondary}}>\r\n            <Timeline experiences={myExperiences}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Experience","import React, { useState } from 'react'\r\nimport {Project} from '../models'\r\nimport {colors, ScreenName} from '../constants'\r\nimport Link from '../components/Link'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport './ProjectBlock.css'\r\n\r\nexport interface Props {\r\n    project: Project\r\n}\r\n\r\nconst ProjectBlock = ({project}: Props) => {\r\n    const [hover, setHover] = useState(false)\r\n    const color = colors[ScreenName.project]\r\n    return (\r\n        <div className='project-block-container' style={{color: color.textPrimary}}>\r\n            <img className='project-block-image' alt={project.name} src={project.image}/>\r\n            <div className='rm-text-h3 project-block-title'>{project.name}</div> \r\n            <div className='rm-text-5 project-block-content'>{project.description}</div>\r\n            <div className='project-block-action'>\r\n                {\r\n                project.github && \r\n                    <Link path={project.github} style={{color: color.textSecondary}}>\r\n                        <GitHubIcon/>\r\n                    </Link>\r\n                }\r\n                <div style={{flex: 1}}/>\r\n                <Link\r\n                className='project-block-btn'\r\n                onMouseOver={() => setHover(true)}\r\n                onMouseOut={() => setHover(false)}\r\n                style={{\r\n                    border: '2px solid ' + color.textSecondary,\r\n                    color: hover ? 'black' : color.textSecondary,\r\n                    backgroundColor: hover ? color.textSecondary : 'transparent'\r\n                }}\r\n                path='https://i.cs.hku.hk/~cfmo/sorting_visualization/'>Play</Link>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectBlock","import React from 'react'\r\nimport {myProjects} from '../data'\r\nimport ProjectBlock from '../components/ProjectBlock'\r\n\r\nexport interface Props{\r\n\r\n}\r\n\r\nconst keyPrefix = Math.random() + ''\r\n\r\nconst Project = (props: Props) => {\r\n    return (\r\n        <div style={{height: '100%', width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'center'}}>\r\n            <div\r\n            className='animate__animated animate__fadeInLeft'\r\n            style={{position: 'relative', padding: 5, overflow: 'auto', width: '80%', display: 'flex', alignItems: 'center', justifyContent: 'flex-start'}}>\r\n            {\r\n                myProjects.map((proj, i) => \r\n                    <ProjectBlock key={keyPrefix + i} project={proj}/>)\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Project","import React, { useCallback, useState } from 'react'\r\nimport {colors, ScreenName} from '../constants'\r\nimport {Tooltip} from '@material-ui/core'\r\n\r\nexport interface Props{\r\n\r\n}\r\n\r\nconst Contact = (props: Props) => {\r\n    const color = colors[ScreenName.contact]\r\n    const [copied, setCopied] = useState(false)\r\n    const copyLink = useCallback(() => {\r\n        const textArea = document.createElement(\"textarea\");\r\n        textArea.value = 'rexmo@connect.hku.hk'\r\n        textArea.style.top = \"0\"\r\n        textArea.style.left = \"0\"\r\n        textArea.style.position = \"fixed\"\r\n        document.body.appendChild(textArea)\r\n        textArea.focus()\r\n        textArea.select()\r\n        try {\r\n            document.execCommand('copy')\r\n            setCopied(true)\r\n            setTimeout(() => setCopied(false), 2000)\r\n        } catch (err) {\r\n        }\r\n        document.body.removeChild(textArea)\r\n    }, [])\r\n\r\n    return (\r\n        <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', height: '100%', width: '100%'}}>\r\n            <div className='rm-text-h2 animate__animated animate__backInDown'>\r\n                {'Email me at '}\r\n                <Tooltip title={<div className='rm-text-5'>{copied ? 'copied' : 'click to copy'}</div>} placement='top' arrow={true}>\r\n                <span onClick={copyLink} className='rm-link' style={{color: color.textSecondary}}>rexmo@connect.hku.hk</span>\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact","import Home from './Home'\r\nimport About from './About'\r\nimport Skill from './Skill'\r\nimport Experience from './Experience'\r\nimport Project from './Project'\r\nimport Contact from './Contact'\r\nimport {ScreenName} from '../constants'\r\n\r\nconst screens = {\r\n    [ScreenName.home]: Home,\r\n    [ScreenName.about]: About,\r\n    [ScreenName.skill]: Skill,\r\n    [ScreenName.experience]: Experience,\r\n    [ScreenName.project]: Project,\r\n    [ScreenName.contact]: Contact,\r\n}\r\nexport default screens ","import screens from '../screens'\r\nimport {ScreenName} from '../constants'\r\nimport {nameToPath} from '../utils/namePathTranslation'\r\nconst routes = {}\r\n\r\nObject.values(ScreenName)\r\n.map((screenName) => \r\n    Object.assign(routes, {[nameToPath(screenName)]: screens[screenName]})\r\n)\r\n\r\nexport default routes","import React, { useState, useCallback } from \"react\";\nimport {\n\tHashRouter,\n\tSwitch,\n\tRoute\n} from \"react-router-dom\"\nimport Background from './components/Background'\nimport NavBar from './components/NavBar'\nimport NextBtn from './components/NextBtn'\nimport routes from './routes'\nimport {ScreenName} from './constants'\nimport './App.css'\n\nconst tabs = Object.keys(ScreenName)\n\t\t\t.filter(key => (key !== 'home'))\n\t\t\t.map(key => ScreenName[key])\n\nfunction useTransition() {\n\tconst [ending, setEnding] = useState(false)\n\tconst goto = useCallback((navCallback) => {\n        setEnding(true)\n        setTimeout(() => {\n            navCallback()\n            setEnding(false)\n        }, 300)\n\t}, [])\n\treturn [ending, goto]\n}\n\nfunction App() {\n\tconst [ending, goto] = useTransition()\n\t\n\treturn (\n\t\t<HashRouter basename='/'>\n\t\t<Background start={!ending}>\n\t\t\t<NavBar tabs={tabs} goto={goto}/>\n            <NextBtn\n\t\t\tloading={ending}\n\t\t\tgoto={goto}/>\n\t\t\t<Switch>\n\t\t\t\t{\n\t\t\t\t\tObject.keys(routes)\n\t\t\t\t\t.reverse()\n\t\t\t\t\t.map(path => {\n\t\t\t\t\t\tconst Screen = routes[path]\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Route path={path} key={path}>\n\t\t\t\t\t\t\t\t{props => <Screen {...props} goto={goto}/>}\n\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t</Switch>\n\t\t</Background>\n\t\t</HashRouter>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}